plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

Properties properties = new Properties()
if (project.rootProject.file("local.properties").exists()) {
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "org.calypsonet.keyple.remote.reload.demo"
        //applicationId "org.keyple.examples.wizway"
        multiDexEnabled true
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 2
        versionName "2021.09"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", "keyple-demo-remote-client_v$versionName")
    }


    signingConfigs {
        //signing config for wizway
        if (properties.containsKey("path_to_se_registered_keystore_orange")) {
            releaseOrange {
                storeFile file(properties["path_to_se_registered_keystore_orange"])
                storePassword properties["store_password_orange"]
                keyAlias properties["key_alias_orange"]
                keyPassword properties["key_password_orange"]
            }
        }
        if (properties.containsKey("path_to_se_registered_keystore_cna")) {
            releaseCna {
                storeFile file(properties["path_to_se_registered_keystore_cna"])
                storePassword properties["store_password_cna"]
                keyAlias properties["key_alias_cna"]
                keyPassword properties["key_password_cna"]
            }
        }
    }

    buildTypes {
        if (properties.containsKey("path_to_se_registered_keystore_orange")) {
            debug {
                signingConfig signingConfigs.releaseOrange
            }
            orange {
                signingConfig signingConfigs.releaseOrange
            }
        }
        if (properties.containsKey("path_to_se_registered_keystore_cna")) {
            cna {
                signingConfig signingConfigs.releaseCna
            }
        }
        debug {
            versionNameSuffix "-DEBUG"
            //applicationIdSuffix ".debug"
            resValue "string", "app_name", "Keyple Remote Reload Demo Debug"
        }
        orange {
            versionNameSuffix "-ORANGE"
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "Keyple Remote Reload Demo Orange"
        }
        cna {
            versionNameSuffix ""
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "Keyple Remote Reload Demo"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        warningsAsErrors false
        abortOnError true // Fail early.
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    testOptions.unitTests.includeAndroidResources = true

    /* fixes espresso conflict with supportAnnotation and androidSupport new versions */
    configurations.all {
        resolutionStrategy {
            force "com.android.support:support-annotations:$supportLibraryVersion"
            force "com.android.support:appcompat-v7:$supportLibraryVersion"
            force "com.android.support:design:$supportLibraryVersion"
            force "com.android.support:recyclerview-v7:$supportLibraryVersion"
            force "com.android.support:support-compat:$supportLibraryVersion"
            force "com.android.support:support-core-ui:$supportLibraryVersion"
            force "com.android.support:support-core-utils:$supportLibraryVersion"
            force "com.android.support:support-fragment:$supportLibraryVersion"
        }
    }
    packagingOptions {
        exclude 'simplelogger.properties'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/keyple-core.properties'
        exclude("META-INF/*.kotlin_module")
        exclude 'config.properties'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "com.google.android.material:material:1.1.0-rc02"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Keyple Java Component
    implementation("org.calypsonet.terminal:calypsonet-terminal-reader-java-api:1.0.+")
    implementation("org.calypsonet.terminal:calypsonet-terminal-card-java-api:1.0.+")
    implementation("org.calypsonet.terminal:calypsonet-terminal-calypso-java-api:1.0.+")

    implementation("org.eclipse.keyple:keyple-service-java-lib:2.0.0-rc4")
    implementation("org.eclipse.keyple:keyple-card-calypso-java-lib:2.0.0-rc4")
    implementation("org.eclipse.keyple:keyple-card-generic-java-lib:2.0.0-rc4")
    implementation("org.eclipse.keyple:keyple-util-java-lib:2.0.0-rc4")
    implementation("org.eclipse.keyple:keyple-common-java-api:2.0.0-rc4")

    implementation("org.eclipse.keyple:keyple-distributed-local-java-lib:2.0.0-rc4")
    implementation "org.eclipse.keyple:keyple-distributed-network-java-lib:2.0.0-rc4"
    implementation("org.eclipse.keyple:keyple-plugin-java-api:2.0.0-rc4")

    implementation "org.eclipse.keyple:keyple-plugin-android-nfc-java-lib:2.0.+"
    implementation "org.eclipse.keyple:keyple-plugin-android-omapi-java-lib:2.0.+"

    implementation project(":common")

    //keyple logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.arcao:slf4j-timber:3.1@aar' //SLF4J binding for Timber

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.1.13"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.2"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation "org.java-websocket:Java-WebSocket:1.3.9"

    // Android Architecture components dependencies
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    //WorkManager
    implementation "androidx.work:work-runtime-ktx:2.5.0"
    implementation "org.greenrobot:eventbus:3.2.0" //to easily handle server status change


    //Multidex
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'joda-time:joda-time:2.10.9'

    // Dagger dependencies
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    // Lottie for animation
    implementation 'com.airbnb.android:lottie:3.4.4'

    // Testing
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.robolectric:robolectric:4.4'
    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation 'androidx.test:core-ktx:1.3.0'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'androidx.test:rules:1.3.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.2.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
