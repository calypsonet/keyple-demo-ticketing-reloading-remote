import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'io.quarkus'
    id("com.diffplug.spotless") version "5.10.2"
}

///////////////////////////////////////////////////////////////////////////////
//  APP CONFIGURATION
///////////////////////////////////////////////////////////////////////////////
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://repo.eclipse.org/service/local/repositories/maven_central/content"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "https://s01.oss.sonatype.org/content/repositories/snapshots"
    }
}


group 'org.cna.keyple.demo.remote.server'
project.version '2021.12'

ext {
    artifactName = project.name + "-v"
}

quarkus {
    finalName artifactName
}


dependencies {

    /* Keyple dependencies
     *  https://keyple.org/components-java/overview/dependency-check/
     */

    /* Core APIs */
    implementation group: 'org.eclipse.keyple', name: 'keyple-common-java-api', version: "2.0.+", changing: true

    /* Core libraries */
    implementation group: 'org.eclipse.keyple', name: 'keyple-util-java-lib', version: "2.0.0", changing: true
    implementation group: 'org.eclipse.keyple', name: 'keyple-service-java-lib', version: "2.0.1", changing: true
    implementation group: 'org.eclipse.keyple', name: 'keyple-service-resource-java-lib', version: "2.0.1", changing: true

    /* Card extensions libraries */
    implementation group: 'org.eclipse.keyple', name: 'keyple-card-calypso-java-lib', version: "2.0.1", changing: true

    /* Distributed systems libraries */
    implementation group: 'org.eclipse.keyple', name: 'keyple-distributed-network-java-lib', version: "2.0.0", changing: true
    implementation group: 'org.eclipse.keyple', name: 'keyple-distributed-remote-java-lib', version: "2.0.0", changing: true
    implementation group: 'org.eclipse.keyple', name: 'keyple-distributed-local-java-lib', version: "2.0.0", changing: true

    implementation group: 'org.calypsonet.terminal', name: 'calypsonet-terminal-reader-java-api', version: "1.0.+"
    implementation group: 'org.calypsonet.terminal', name: 'calypsonet-terminal-calypso-java-api', version: "1.0.+"


    /* Standard reader plugins libraries */
    implementation group: 'org.eclipse.keyple', name: 'keyple-plugin-stub-java-lib', version: "2.0.0"
    implementation group: 'org.eclipse.keyple', name: 'keyple-plugin-pcsc-java-lib', version: "2.0.0"


    /* Common lib */
    implementation project(":common")

    /* Quarkus */
    implementation 'io.quarkus:quarkus-resteasy-jsonb'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-rest-client'
    implementation group: 'com.google.code.gson', name: 'gson', version: "2.8.6"

    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
    systemProperty "quarkus.log.level", "INFO"
    exclude '**/**WaitTransactionTest.java'
}

///////////////////////////////////////////////////////////////////////////////
//  TASKS CONFIGURATION
///////////////////////////////////////////////////////////////////////////////
spotless {
    java {
        target("src/**/*.java")
        licenseHeaderFile("${project.rootDir}/LICENSE_HEADER")
        importOrder("java", "javax", "org", "com", "")
        removeUnusedImports()
        googleJavaFormat()
    }
}


task('runDevServer', group: 'keyple') {
    dependsOn 'quarkusDev'
}

task('runPackagedServer', group: 'keyple', type: Exec) {
    workingDir 'build'
    commandLine 'java', '-jar', artifactName + version + ".jar"
}

task('buildPackagedServer', group: 'keyple') {
    dependsOn 'copyDashboard', 'quarkusBuild'
}

task buildDashboard(type: Exec) {
    workingDir 'dashboard-app'
    String npm = 'npm'
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        npm = 'npm.cmd'
    }
    commandLine npm, 'run', 'build'
}

task copyDashboard(type: Copy) {
    from 'dashboard-app/build'
    into 'src/main/resources/META-INF/resources'
    dependsOn 'buildDashboard'
}